name: gnimty-community-server-dev-deploy

on:
  push:
    branches: [ dev, hotfix ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: checkout repository
        uses: actions/checkout@master

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: adopt

      - name: Build with Gradle
        run: ./gradlew build

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: 'linux/arm64, linux/arm64/v8'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        run: |
          docker build . --file Dockerfile --tag ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ secrets.TAG }}
          docker push ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ secrets.TAG }}

            ## docker-compose.yml 서버에 이동
      - name: docker-compose.yml 파일 이동
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: docker-compose-dev.yml
          target: "${{ secrets.DIR }}"

      - name: Docker 이미지 pull 이후 down/up
        uses: appleboy/ssh-action@v1.0.2
        with:
          host: ${{ secrets.DEV_HOST }}
          username: ${{ secrets.DEV_USER }}
          key: ${{ secrets.DEV_SSH_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ secrets.DIR }}
            touch .env
            sudo echo "${{ secrets.DEV_ENV }}" > .env
            touch db.env
            sudo echo "${{ secrets.DEV_DB_ENV }}" > db.env
            
            sudo docker pull ${{ secrets.REGISTRY }}/${{ secrets.IMAGE_NAME }}:${{ secrets.TAG }}
            sudo docker-compose -f docker-compose-dev.yml down -v
            sudo docker-compose -f docker-compose-dev.yml up -d
