jwt:
  secret: ${JWT_SECRET}

oauth:
  kakao:
    client_id: ${OAUTH_KAKAO_CLIENT_ID}
    client_secret: ${OAUTH_KAKAO_CLIENT_SECRET}
  google:
    client_id: ${OAUTH_GOOGLE_CLIENT_ID}
    client_secret: ${OAUTH_GOOGLE_CLIENT_SECRET}
  riot:
    client_id: ${OAUTH_RIOT_CLIENT_ID}
    client_secret: ${OAUTH_RIOT_CLIENT_SECRET}

server:
  servlet:
    context-path: /community
spring:
  mvc:
    throw-exception-if-no-handler-found: true
  web:
    resources:
      add-mappings: false
  jpa:
    properties:
      hibernate:
        format_sql: true
    show-sql: true

  mail:
    host: smtp.gmail.com
    port: 587
    username: ${MAIL_USERNAME}
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          timeout: 10000
          starttls:
            enable: true
        debug: true
        transport:
          protocol: smtp

---
spring:
  config:
    activate:
      on-profile: local

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    jdbc-url: ${MYSQL_HOST}
    hikari:
      max-lifetime: 60000
      connection-timeout: 30000
      maximum-pool-size: 10

  jpa:
    database: mysql   # 추가 해준 부분
    properties:
      hibernate:
        hbm2ddl:
          auto: update

  data:
    mongodb:
      uri: ${MONGO_URI}

logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        orm.jdbc.bind: TRACE
      springframework:
        data:
          mongodb:
            core:
              MongoTemplate: DEBUG


oauth:
  kakao:
    redirect_uri: http://localhost:8080/community/oauth/kakao/redirect
  google:
    redirect_uri: http://localhost:8080/community/oauth/google/redirect
  riot:
    redirect_uri: http://localhost:8080/community/oauth/riot/redirect

---
spring:
  config:
    activate:
      on-profile: test

  datasource:
    driver-class-name: org.h2.Driver
    username: sa
    password:
    url: jdbc:h2:mem:test;MODE=MySQL
  h2:
    console:
      enabled: true
      path: /h2-console
  jpa:
    hibernate:
      ddl-auto: create-drop
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQL5InnoDBDialect
    defer-datasource-initialization: true

#  다시 세팅할 예정
#  mongodb:
#    embedded:
#      version: 3.5.5

logging:
  level:
    org.hibernate.SQL: DEBUG
    org.hibernate.type: TRACE

oauth:
  kakao:
    redirect_uri: http://localhost:8080/community/oauth/kakao/redirect
  google:
    redirect_uri: http://localhost:8080/community/oauth/google/redirect
  riot:
    redirect_uri: http://localhost:8080/community/oauth/riot/redirect

---
spring:
  config:
    activate:
      on-profile: dev
  jpa:
    properties:
      hibernate:
        hbm2ddl:
          auto: update

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    username: ${MYSQL_USERNAME}
    password: ${MYSQL_PASSWORD}
    hikari:
      max-lifetime: 60000
      connection-timeout: 30000
      maximum-pool-size: 10
    jdbc-url: ${MYSQL_HOST}

  data:
    mongodb:
      username: ${MONGO_USERNAME}
      password: ${MONGO_PASSWORD}
      database: ${MONGO_DATABASE}
      host: ${MONGO_HOST}
      port: ${MONGO_PORT}
      timeZone: Asia/Seoul
      authentication-database: ${MONGO_ADMIN_DB}
      auto-index-creation: true

  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

oauth:
  kakao:
    redirect_uri: ${OAUTH_KAKAO_REDIRECT_URI}
  google:
    redirect_uri: ${OAUTH_GOOGLE_REDIRECT_URI}
  riot:
    redirect_uri: ${OAUTH_GOOGLE_REDIRECT_URI}

